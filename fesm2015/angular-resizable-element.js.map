{"version":3,"file":"angular-resizable-element.js","sources":["../../../projects/angular-resizable-element/src/lib/util/is-touch-device.ts","../../../projects/angular-resizable-element/src/lib/util/clone-node.ts","../../../projects/angular-resizable-element/src/lib/resizable.directive.ts","../../../projects/angular-resizable-element/src/lib/resize-handle.directive.ts","../../../projects/angular-resizable-element/src/lib/resizable.module.ts","../../../projects/angular-resizable-element/src/public-api.ts","../../../projects/angular-resizable-element/src/angular-resizable-element.ts"],"sourcesContent":["/**\r\n * @hidden\r\n */\r\nexport const IS_TOUCH_DEVICE: boolean = (() => {\r\n  // In case we're in Node.js environment.\r\n  if (typeof window === 'undefined') {\r\n    return false;\r\n  } else {\r\n    return (\r\n      'ontouchstart' in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0\r\n    );\r\n  }\r\n})();\r\n","/** Creates a deep clone of an element. */\r\nexport function deepCloneNode(node: HTMLElement): HTMLElement {\r\n  const clone = node.cloneNode(true) as HTMLElement;\r\n  const descendantsWithId = clone.querySelectorAll('[id]');\r\n  const nodeName = node.nodeName.toLowerCase();\r\n\r\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\r\n  clone.removeAttribute('id');\r\n\r\n  descendantsWithId.forEach((descendant) => {\r\n    descendant.removeAttribute('id');\r\n  });\r\n\r\n  if (nodeName === 'canvas') {\r\n    transferCanvasData(node as HTMLCanvasElement, clone as HTMLCanvasElement);\r\n  } else if (\r\n    nodeName === 'input' ||\r\n    nodeName === 'select' ||\r\n    nodeName === 'textarea'\r\n  ) {\r\n    transferInputData(node as HTMLInputElement, clone as HTMLInputElement);\r\n  }\r\n\r\n  transferData('canvas', node, clone, transferCanvasData);\r\n  transferData('input, textarea, select', node, clone, transferInputData);\r\n  return clone;\r\n}\r\n\r\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\r\nfunction transferData<T extends Element>(\r\n  selector: string,\r\n  node: HTMLElement,\r\n  clone: HTMLElement,\r\n  callback: (source: T, clone: T) => void\r\n) {\r\n  const descendantElements = node.querySelectorAll<T>(selector);\r\n\r\n  if (descendantElements.length) {\r\n    const cloneElements = clone.querySelectorAll<T>(selector);\r\n\r\n    for (let i = 0; i < descendantElements.length; i++) {\r\n      callback(descendantElements[i], cloneElements[i]);\r\n    }\r\n  }\r\n}\r\n\r\n// Counter for unique cloned radio button names.\r\nlet cloneUniqueId = 0;\r\n\r\n/** Transfers the data of one input element to another. */\r\nfunction transferInputData(\r\n  source: Element & { value: string },\r\n  clone: Element & { value: string; name: string; type: string }\r\n) {\r\n  // Browsers throw an error when assigning the value of a file input programmatically.\r\n  if (clone.type !== 'file') {\r\n    clone.value = source.value;\r\n  }\r\n\r\n  // Radio button `name` attributes must be unique for radio button groups\r\n  // otherwise original radio buttons can lose their checked state\r\n  // once the clone is inserted in the DOM.\r\n  if (clone.type === 'radio' && clone.name) {\r\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\r\n  }\r\n}\r\n\r\n/** Transfers the data of one canvas element to another. */\r\nfunction transferCanvasData(\r\n  source: HTMLCanvasElement,\r\n  clone: HTMLCanvasElement\r\n) {\r\n  const context = clone.getContext('2d');\r\n\r\n  if (context) {\r\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\r\n    // We can't do much about it so just ignore the error.\r\n    try {\r\n      context.drawImage(source, 0, 0);\r\n    } catch {}\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnInit,\r\n  Output,\r\n  Input,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  NgZone,\r\n  Inject,\r\n  PLATFORM_ID,\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Subject, Observable, Observer, merge } from 'rxjs';\r\nimport {\r\n  map,\r\n  mergeMap,\r\n  takeUntil,\r\n  filter,\r\n  pairwise,\r\n  take,\r\n  share,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { Edges } from './interfaces/edges.interface';\r\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\r\nimport { ClickEvent } from './interfaces/click-event.interface';\r\nimport { ResizeEvent } from './interfaces/resize-event.interface';\r\nimport { IS_TOUCH_DEVICE } from './util/is-touch-device';\r\nimport { deepCloneNode } from './util/clone-node';\r\n\r\ninterface PointerEventCoordinate {\r\n  clientX: number;\r\n  clientY: number;\r\n  event: MouseEvent | TouchEvent;\r\n}\r\n\r\ninterface Coordinate {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nfunction getNewBoundingRectangle(\r\n  startingRect: BoundingRectangle,\r\n  edges: Edges,\r\n  clientX: number,\r\n  clientY: number\r\n): BoundingRectangle {\r\n  const newBoundingRect: BoundingRectangle = {\r\n    top: startingRect.top,\r\n    bottom: startingRect.bottom,\r\n    left: startingRect.left,\r\n    right: startingRect.right,\r\n  };\r\n\r\n  if (edges.top) {\r\n    newBoundingRect.top += clientY;\r\n  }\r\n  if (edges.bottom) {\r\n    newBoundingRect.bottom += clientY;\r\n  }\r\n  if (edges.left) {\r\n    newBoundingRect.left += clientX;\r\n  }\r\n  if (edges.right) {\r\n    newBoundingRect.right += clientX;\r\n  }\r\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\r\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\r\n\r\n  return newBoundingRect;\r\n}\r\n\r\nfunction getElementRect(\r\n  element: ElementRef,\r\n  ghostElementPositioning: string\r\n): BoundingRectangle {\r\n  let translateX = 0;\r\n  let translateY = 0;\r\n  const style = element.nativeElement.style;\r\n  const transformProperties = [\r\n    'transform',\r\n    '-ms-transform',\r\n    '-moz-transform',\r\n    '-o-transform',\r\n  ];\r\n  const transform = transformProperties\r\n    .map((property) => style[property])\r\n    .find((value) => !!value);\r\n  if (transform && transform.includes('translate')) {\r\n    translateX = transform.replace(\r\n      /.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/,\r\n      '$1'\r\n    );\r\n    translateY = transform.replace(\r\n      /.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/,\r\n      '$2'\r\n    );\r\n  }\r\n\r\n  if (ghostElementPositioning === 'absolute') {\r\n    return {\r\n      height: element.nativeElement.offsetHeight,\r\n      width: element.nativeElement.offsetWidth,\r\n      top: element.nativeElement.offsetTop - translateY,\r\n      bottom:\r\n        element.nativeElement.offsetHeight +\r\n        element.nativeElement.offsetTop -\r\n        translateY,\r\n      left: element.nativeElement.offsetLeft - translateX,\r\n      right:\r\n        element.nativeElement.offsetWidth +\r\n        element.nativeElement.offsetLeft -\r\n        translateX,\r\n    };\r\n  } else {\r\n    const boundingRect: BoundingRectangle =\r\n      element.nativeElement.getBoundingClientRect();\r\n    return {\r\n      height: boundingRect.height,\r\n      width: boundingRect.width,\r\n      top: boundingRect.top - translateY,\r\n      bottom: boundingRect.bottom - translateY,\r\n      left: boundingRect.left - translateX,\r\n      right: boundingRect.right - translateX,\r\n      scrollTop: element.nativeElement.scrollTop,\r\n      scrollLeft: element.nativeElement.scrollLeft,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface ResizeCursors {\r\n  topLeft: string;\r\n  topRight: string;\r\n  bottomLeft: string;\r\n  bottomRight: string;\r\n  leftOrRight: string;\r\n  topOrBottom: string;\r\n}\r\n\r\nconst DEFAULT_RESIZE_CURSORS: ResizeCursors = Object.freeze({\r\n  topLeft: 'nw-resize',\r\n  topRight: 'ne-resize',\r\n  bottomLeft: 'sw-resize',\r\n  bottomRight: 'se-resize',\r\n  leftOrRight: 'col-resize',\r\n  topOrBottom: 'row-resize',\r\n});\r\n\r\nfunction getResizeCursor(edges: Edges, cursors: ResizeCursors): string {\r\n  if (edges.left && edges.top) {\r\n    return cursors.topLeft;\r\n  } else if (edges.right && edges.top) {\r\n    return cursors.topRight;\r\n  } else if (edges.left && edges.bottom) {\r\n    return cursors.bottomLeft;\r\n  } else if (edges.right && edges.bottom) {\r\n    return cursors.bottomRight;\r\n  } else if (edges.left || edges.right) {\r\n    return cursors.leftOrRight;\r\n  } else if (edges.top || edges.bottom) {\r\n    return cursors.topOrBottom;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\nexport type EdgesDiff = {\r\n  [Property in keyof Edges]: Exclude<Edges[Property], boolean>;\r\n};\r\n\r\nfunction getEdgesDiff({\r\n  edges,\r\n  initialRectangle,\r\n  newRectangle,\r\n}: {\r\n  edges: Edges;\r\n  initialRectangle: BoundingRectangle;\r\n  newRectangle: BoundingRectangle;\r\n}): EdgesDiff {\r\n  const edgesDiff: EdgesDiff = {};\r\n  Object.keys(edges).forEach((edge) => {\r\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\r\n  });\r\n  return edgesDiff;\r\n}\r\n\r\nconst getTotalDiff = (edgesDiff: EdgesDiff) =>\r\n  Object.values(edgesDiff)\r\n    .map((edge) => Math.abs(edge || 0))\r\n    .reduce((a, b) => Math.max(a, b), 0);\r\n\r\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\r\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\r\n\r\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\r\n\r\nexport const DISABLE_CLICK_MOVE_THRESHOLD: number = 0;\r\n\r\n/**\r\n * Place this on an element to make it resizable. For example:\r\n *\r\n * ```html\r\n * <div\r\n *   mwlResizable\r\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\r\n *   [enableGhostResize]=\"true\">\r\n * </div>\r\n * ```\r\n * Or in case they are sibling elements:\r\n * ```html\r\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\r\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[mwlResizable]',\r\n  exportAs: 'mwlResizable',\r\n})\r\nexport class ResizableDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\r\n   */\r\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\r\n\r\n  /**\r\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\r\n   */\r\n  @Input() enableGhostResize: boolean = false;\r\n\r\n  /**\r\n   * A snap grid that resize events will be locked to.\r\n   *\r\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\r\n   */\r\n  @Input() resizeSnapGrid: Edges = {};\r\n\r\n  /**\r\n   * The mouse cursors that will be set on the resize edges\r\n   */\r\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\r\n\r\n  /**\r\n   * Define the positioning of the ghost element (can be fixed or absolute)\r\n   */\r\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\r\n\r\n  /**\r\n   * Allow elements to be resized to negative dimensions\r\n   */\r\n  @Input() allowNegativeResizes: boolean = false;\r\n\r\n  /**\r\n   * The mouse move throttle in milliseconds, default: 50 ms\r\n   */\r\n  @Input() mouseMoveThrottleMS: number = MOUSE_MOVE_THROTTLE_MS;\r\n\r\n  /**\r\n   * The distance in pixels that the mouse must move to trigger a resize event, <= 0 to disable (default)\r\n   *\r\n   * Below this threshold, a click event will be emitted instead\r\n   */\r\n  @Input() resizeMoveThreshold: number = DISABLE_CLICK_MOVE_THRESHOLD;\r\n\r\n  /**\r\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\r\n   */\r\n  @Output() resizeStart = new EventEmitter<ResizeEvent>();\r\n\r\n  /**\r\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\r\n   */\r\n  @Output() resizing = new EventEmitter<ResizeEvent>();\r\n\r\n  /**\r\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\r\n   */\r\n  @Output() resizeEnd = new EventEmitter<ResizeEvent>();\r\n\r\n  /**\r\n   * Called after the mouse is released after a click event. `$event` is a `ClickEvent` object.\r\n   */\r\n  @Output() clicked = new EventEmitter<ClickEvent>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mouseup = new Subject<{\r\n    clientX: number;\r\n    clientY: number;\r\n    edges?: Edges;\r\n  }>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mousedown = new Subject<{\r\n    clientX: number;\r\n    clientY: number;\r\n    edges?: Edges;\r\n  }>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mousemove = new Subject<{\r\n    clientX: number;\r\n    clientY: number;\r\n    edges?: Edges;\r\n    event: MouseEvent | TouchEvent;\r\n  }>();\r\n\r\n  private pointerEventListeners: PointerEventListeners;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: any,\r\n    private renderer: Renderer2,\r\n    public elm: ElementRef,\r\n    private zone: NgZone\r\n  ) {\r\n    this.pointerEventListeners = PointerEventListeners.getInstance(\r\n      renderer,\r\n      zone\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit(): void {\r\n    const mousedown$: Observable<{\r\n      clientX: number;\r\n      clientY: number;\r\n      edges?: Edges;\r\n    }> = merge(this.pointerEventListeners.pointerDown, this.mousedown);\r\n\r\n    const mousemove$ = merge(\r\n      this.pointerEventListeners.pointerMove,\r\n      this.mousemove\r\n    ).pipe(\r\n      tap(({ event }) => {\r\n        if (currentResize) {\r\n          try {\r\n            event.preventDefault();\r\n          } catch (e) {\r\n            // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\r\n            // browser does nothing except of writing errors to console\r\n          }\r\n        }\r\n      }),\r\n      share()\r\n    );\r\n\r\n    const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\r\n\r\n    let currentResize: {\r\n      edges: Edges;\r\n      startingRect: BoundingRectangle;\r\n      currentRect: BoundingRectangle;\r\n      clonedNode?: HTMLElement;\r\n      visible: boolean;\r\n    } | null;\r\n\r\n    const removeGhostElement = () => {\r\n      if (currentResize && currentResize.clonedNode) {\r\n        this.elm.nativeElement.parentElement.removeChild(\r\n          currentResize.clonedNode\r\n        );\r\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\r\n      }\r\n    };\r\n\r\n    const getResizeCursors = (): ResizeCursors => {\r\n      return {\r\n        ...DEFAULT_RESIZE_CURSORS,\r\n        ...this.resizeCursors,\r\n      };\r\n    };\r\n\r\n    const startVisibleResize = (): void => {\r\n      currentResize!.visible = true;\r\n      const resizeCursors = getResizeCursors();\r\n      const cursor = getResizeCursor(currentResize!.edges, resizeCursors);\r\n      this.renderer.setStyle(document.body, 'cursor', cursor);\r\n      this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\r\n      if (this.enableGhostResize) {\r\n        currentResize!.clonedNode = deepCloneNode(this.elm.nativeElement);\r\n        this.elm.nativeElement.parentElement.appendChild(\r\n          currentResize!.clonedNode\r\n        );\r\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'position',\r\n          this.ghostElementPositioning\r\n        );\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'left',\r\n          `${currentResize!.startingRect.left}px`\r\n        );\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'top',\r\n          `${currentResize!.startingRect.top}px`\r\n        );\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'height',\r\n          `${currentResize!.startingRect.height}px`\r\n        );\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'width',\r\n          `${currentResize!.startingRect.width}px`\r\n        );\r\n        this.renderer.setStyle(\r\n          currentResize!.clonedNode,\r\n          'cursor',\r\n          getResizeCursor(currentResize!.edges, resizeCursors)\r\n        );\r\n        this.renderer.addClass(\r\n          currentResize!.clonedNode,\r\n          RESIZE_GHOST_ELEMENT_CLASS\r\n        );\r\n        currentResize!.clonedNode!.scrollTop = currentResize!.startingRect\r\n          .scrollTop as number;\r\n        currentResize!.clonedNode!.scrollLeft = currentResize!.startingRect\r\n          .scrollLeft as number;\r\n      }\r\n      if (this.resizeStart.observers.length > 0) {\r\n        this.zone.run(() => {\r\n          this.resizeStart.emit({\r\n            edges: getEdgesDiff({\r\n              edges: currentResize!.edges,\r\n              initialRectangle: currentResize!.startingRect,\r\n              newRectangle: currentResize!.startingRect,\r\n            }),\r\n            rectangle: getNewBoundingRectangle(\r\n              currentResize!.startingRect,\r\n              {},\r\n              0,\r\n              0\r\n            ),\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    const mousedrag: Observable<any> = mousedown$\r\n      .pipe(\r\n        mergeMap((startCoords) => {\r\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\r\n            return {\r\n              clientX: moveCoords.clientX - startCoords.clientX,\r\n              clientY: moveCoords.clientY - startCoords.clientY,\r\n            };\r\n          }\r\n\r\n          const getSnapGrid = () => {\r\n            const snapGrid: Coordinate = { x: 1, y: 1 };\r\n\r\n            if (currentResize) {\r\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\r\n                snapGrid.x = +this.resizeSnapGrid.left;\r\n              } else if (\r\n                this.resizeSnapGrid.right &&\r\n                currentResize.edges.right\r\n              ) {\r\n                snapGrid.x = +this.resizeSnapGrid.right;\r\n              }\r\n\r\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\r\n                snapGrid.y = +this.resizeSnapGrid.top;\r\n              } else if (\r\n                this.resizeSnapGrid.bottom &&\r\n                currentResize.edges.bottom\r\n              ) {\r\n                snapGrid.y = +this.resizeSnapGrid.bottom;\r\n              }\r\n            }\r\n\r\n            return snapGrid;\r\n          };\r\n\r\n          function getGrid(\r\n            coords: { clientX: number; clientY: number },\r\n            snapGrid: Coordinate\r\n          ) {\r\n            return {\r\n              x: Math.ceil(coords.clientX / snapGrid.x),\r\n              y: Math.ceil(coords.clientY / snapGrid.y),\r\n            };\r\n          }\r\n\r\n          return (\r\n            merge(\r\n              mousemove$.pipe(take(1)).pipe(map((coords) => [, coords])),\r\n              mousemove$.pipe(pairwise())\r\n            ) as Observable<\r\n              [\r\n                { clientX: number; clientY: number },\r\n                { clientX: number; clientY: number }\r\n              ]\r\n            >\r\n          )\r\n            .pipe(\r\n              map(([previousCoords, newCoords]) => {\r\n                return [\r\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\r\n                  getDiff(newCoords),\r\n                ];\r\n              })\r\n            )\r\n            .pipe(\r\n              filter(([previousCoords, newCoords]) => {\r\n                if (!previousCoords) {\r\n                  return true;\r\n                }\r\n\r\n                const snapGrid: Coordinate = getSnapGrid();\r\n                const previousGrid: Coordinate = getGrid(\r\n                  previousCoords,\r\n                  snapGrid\r\n                );\r\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\r\n\r\n                return (\r\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\r\n                );\r\n              })\r\n            )\r\n            .pipe(\r\n              map(([, newCoords]) => {\r\n                const snapGrid: Coordinate = getSnapGrid();\r\n                return {\r\n                  clientX:\r\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\r\n                  clientY:\r\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y,\r\n                };\r\n              })\r\n            )\r\n            .pipe(takeUntil(merge(mouseup$, mousedown$)));\r\n        })\r\n      )\r\n      .pipe(filter(() => !!currentResize));\r\n\r\n    mousedrag\r\n      .pipe(\r\n        map(({ clientX, clientY }) => {\r\n          return getNewBoundingRectangle(\r\n            currentResize!.startingRect,\r\n            currentResize!.edges,\r\n            clientX,\r\n            clientY\r\n          );\r\n        })\r\n      )\r\n      .pipe(\r\n        filter((newBoundingRect: BoundingRectangle) => {\r\n          return (\r\n            this.allowNegativeResizes ||\r\n            !!(\r\n              newBoundingRect.height &&\r\n              newBoundingRect.width &&\r\n              newBoundingRect.height > 0 &&\r\n              newBoundingRect.width > 0\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .pipe(\r\n        filter((newBoundingRect: BoundingRectangle) => {\r\n          return this.validateResize\r\n            ? this.validateResize({\r\n                rectangle: newBoundingRect,\r\n                edges: getEdgesDiff({\r\n                  edges: currentResize!.edges,\r\n                  initialRectangle: currentResize!.startingRect,\r\n                  newRectangle: newBoundingRect,\r\n                }),\r\n              })\r\n            : true;\r\n        }),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe((newBoundingRect: BoundingRectangle) => {\r\n        const edges = getEdgesDiff({\r\n          edges: currentResize!.edges,\r\n          initialRectangle: currentResize!.startingRect,\r\n          newRectangle: newBoundingRect,\r\n        });\r\n        if (\r\n          !currentResize!.visible &&\r\n          getTotalDiff(edges) >= this.resizeMoveThreshold\r\n        ) {\r\n          startVisibleResize();\r\n        }\r\n        if (currentResize!.visible && currentResize!.clonedNode) {\r\n          this.renderer.setStyle(\r\n            currentResize!.clonedNode,\r\n            'height',\r\n            `${newBoundingRect.height}px`\r\n          );\r\n          this.renderer.setStyle(\r\n            currentResize!.clonedNode,\r\n            'width',\r\n            `${newBoundingRect.width}px`\r\n          );\r\n          this.renderer.setStyle(\r\n            currentResize!.clonedNode,\r\n            'top',\r\n            `${newBoundingRect.top}px`\r\n          );\r\n          this.renderer.setStyle(\r\n            currentResize!.clonedNode,\r\n            'left',\r\n            `${newBoundingRect.left}px`\r\n          );\r\n        }\r\n\r\n        if (currentResize!.visible && this.resizing.observers.length > 0) {\r\n          this.zone.run(() => {\r\n            this.resizing.emit({\r\n              edges,\r\n              rectangle: newBoundingRect,\r\n            });\r\n          });\r\n        }\r\n        currentResize!.currentRect = newBoundingRect;\r\n      });\r\n\r\n    mousedown$\r\n      .pipe(\r\n        map(({ edges }) => {\r\n          return edges || {};\r\n        }),\r\n        filter((edges: Edges) => {\r\n          return Object.keys(edges).length > 0;\r\n        }),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe((edges: Edges) => {\r\n        if (currentResize) {\r\n          removeGhostElement();\r\n        }\r\n        const startingRect: BoundingRectangle = getElementRect(\r\n          this.elm,\r\n          this.ghostElementPositioning\r\n        );\r\n        currentResize = {\r\n          edges,\r\n          startingRect,\r\n          currentRect: startingRect,\r\n          visible: false,\r\n        };\r\n        if (this.resizeMoveThreshold <= 0) {\r\n          startVisibleResize();\r\n        }\r\n      });\r\n\r\n    mouseup$.pipe(takeUntil(this.destroy$)).subscribe((event) => {\r\n      if (!currentResize) {\r\n        return;\r\n      }\r\n      if (currentResize.visible) {\r\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\r\n        this.renderer.setStyle(document.body, 'cursor', '');\r\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\r\n        if (this.resizeEnd.observers.length > 0) {\r\n          this.zone.run(() => {\r\n            this.resizeEnd.emit({\r\n              edges: getEdgesDiff({\r\n                edges: currentResize!.edges,\r\n                initialRectangle: currentResize!.startingRect,\r\n                newRectangle: currentResize!.currentRect,\r\n              }),\r\n              rectangle: currentResize!.currentRect,\r\n            });\r\n          });\r\n        }\r\n        removeGhostElement();\r\n      } else {\r\n        if (this.clicked.observers.length > 0) {\r\n          this.zone.run(() => {\r\n            this.clicked.emit(event);\r\n          });\r\n        }\r\n      }\r\n      currentResize = null;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnDestroy(): void {\r\n    // browser check for angular universal, because it doesn't know what document is\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.renderer.setStyle(document.body, 'cursor', '');\r\n    }\r\n    this.mousedown.complete();\r\n    this.mouseup.complete();\r\n    this.mousemove.complete();\r\n    this.destroy$.next();\r\n  }\r\n\r\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\r\n    if (add) {\r\n      this.renderer.addClass(elm.nativeElement, name);\r\n    } else {\r\n      this.renderer.removeClass(elm.nativeElement, name);\r\n    }\r\n  }\r\n}\r\n\r\nclass PointerEventListeners {\r\n  public pointerDown: Observable<PointerEventCoordinate>;\r\n\r\n  public pointerMove: Observable<PointerEventCoordinate>;\r\n\r\n  public pointerUp: Observable<PointerEventCoordinate>;\r\n\r\n  private static instance: PointerEventListeners;\r\n\r\n  public static getInstance(\r\n    renderer: Renderer2,\r\n    zone: NgZone\r\n  ): PointerEventListeners {\r\n    if (!PointerEventListeners.instance) {\r\n      PointerEventListeners.instance = new PointerEventListeners(\r\n        renderer,\r\n        zone\r\n      );\r\n    }\r\n    return PointerEventListeners.instance;\r\n  }\r\n\r\n  constructor(renderer: Renderer2, zone: NgZone) {\r\n    this.pointerDown = new Observable(\r\n      (observer: Observer<PointerEventCoordinate>) => {\r\n        let unsubscribeMouseDown: () => void;\r\n        let unsubscribeTouchStart: (() => void) | undefined;\r\n\r\n        zone.runOutsideAngular(() => {\r\n          unsubscribeMouseDown = renderer.listen(\r\n            'document',\r\n            'mousedown',\r\n            (event: MouseEvent) => {\r\n              observer.next({\r\n                clientX: event.clientX,\r\n                clientY: event.clientY,\r\n                event,\r\n              });\r\n            }\r\n          );\r\n\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchStart = renderer.listen(\r\n              'document',\r\n              'touchstart',\r\n              (event: TouchEvent) => {\r\n                observer.next({\r\n                  clientX: event.touches[0].clientX,\r\n                  clientY: event.touches[0].clientY,\r\n                  event,\r\n                });\r\n              }\r\n            );\r\n          }\r\n        });\r\n\r\n        return () => {\r\n          unsubscribeMouseDown();\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchStart!();\r\n          }\r\n        };\r\n      }\r\n    ).pipe(share());\r\n\r\n    this.pointerMove = new Observable(\r\n      (observer: Observer<PointerEventCoordinate>) => {\r\n        let unsubscribeMouseMove: () => void;\r\n        let unsubscribeTouchMove: (() => void) | undefined;\r\n\r\n        zone.runOutsideAngular(() => {\r\n          unsubscribeMouseMove = renderer.listen(\r\n            'document',\r\n            'mousemove',\r\n            (event: MouseEvent) => {\r\n              observer.next({\r\n                clientX: event.clientX,\r\n                clientY: event.clientY,\r\n                event,\r\n              });\r\n            }\r\n          );\r\n\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchMove = renderer.listen(\r\n              'document',\r\n              'touchmove',\r\n              (event: TouchEvent) => {\r\n                observer.next({\r\n                  clientX: event.targetTouches[0].clientX,\r\n                  clientY: event.targetTouches[0].clientY,\r\n                  event,\r\n                });\r\n              }\r\n            );\r\n          }\r\n        });\r\n\r\n        return () => {\r\n          unsubscribeMouseMove();\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchMove!();\r\n          }\r\n        };\r\n      }\r\n    ).pipe(share());\r\n\r\n    this.pointerUp = new Observable(\r\n      (observer: Observer<PointerEventCoordinate>) => {\r\n        let unsubscribeMouseUp: () => void;\r\n        let unsubscribeTouchEnd: (() => void) | undefined;\r\n        let unsubscribeTouchCancel: (() => void) | undefined;\r\n\r\n        zone.runOutsideAngular(() => {\r\n          unsubscribeMouseUp = renderer.listen(\r\n            'document',\r\n            'mouseup',\r\n            (event: MouseEvent) => {\r\n              observer.next({\r\n                clientX: event.clientX,\r\n                clientY: event.clientY,\r\n                event,\r\n              });\r\n            }\r\n          );\r\n\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchEnd = renderer.listen(\r\n              'document',\r\n              'touchend',\r\n              (event: TouchEvent) => {\r\n                observer.next({\r\n                  clientX: event.changedTouches[0].clientX,\r\n                  clientY: event.changedTouches[0].clientY,\r\n                  event,\r\n                });\r\n              }\r\n            );\r\n\r\n            unsubscribeTouchCancel = renderer.listen(\r\n              'document',\r\n              'touchcancel',\r\n              (event: TouchEvent) => {\r\n                observer.next({\r\n                  clientX: event.changedTouches[0].clientX,\r\n                  clientY: event.changedTouches[0].clientY,\r\n                  event,\r\n                });\r\n              }\r\n            );\r\n          }\r\n        });\r\n\r\n        return () => {\r\n          unsubscribeMouseUp();\r\n          if (IS_TOUCH_DEVICE) {\r\n            unsubscribeTouchEnd!();\r\n            unsubscribeTouchCancel!();\r\n          }\r\n        };\r\n      }\r\n    ).pipe(share());\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  NgZone,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { fromEvent, merge, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ResizableDirective } from './resizable.directive';\r\nimport { Edges } from './interfaces/edges.interface';\r\nimport { IS_TOUCH_DEVICE } from './util/is-touch-device';\r\n\r\n/**\r\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\r\n *\r\n * For example\r\n *\r\n * ```html\r\n * <div mwlResizable>\r\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\r\n * </div>\r\n * ```\r\n * Or in case they are sibling elements:\r\n * ```html\r\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\r\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[mwlResizeHandle]',\r\n})\r\nexport class ResizeHandleDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\r\n   */\r\n  @Input() resizeEdges: Edges = {};\r\n  /**\r\n   * Reference to ResizableDirective in case if handle is not located inside of element with ResizableDirective\r\n   */\r\n  @Input() resizableContainer: ResizableDirective;\r\n\r\n  private eventListeners: {\r\n    touchmove?: () => void;\r\n    mousemove?: () => void;\r\n    [key: string]: (() => void) | undefined;\r\n  } = {};\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private element: ElementRef,\r\n    private zone: NgZone,\r\n    @Optional() private resizableDirective: ResizableDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.listenOnTheHost<MouseEvent>('mousedown').subscribe((event) => {\r\n        this.onMousedown(event, event.clientX, event.clientY);\r\n      });\r\n\r\n      this.listenOnTheHost<MouseEvent>('mouseup').subscribe((event) => {\r\n        this.onMouseup(event.clientX, event.clientY);\r\n      });\r\n\r\n      if (IS_TOUCH_DEVICE) {\r\n        this.listenOnTheHost<TouchEvent>('touchstart').subscribe((event) => {\r\n          this.onMousedown(\r\n            event,\r\n            event.touches[0].clientX,\r\n            event.touches[0].clientY\r\n          );\r\n        });\r\n\r\n        merge(\r\n          this.listenOnTheHost<TouchEvent>('touchend'),\r\n          this.listenOnTheHost<TouchEvent>('touchcancel')\r\n        ).subscribe((event) => {\r\n          this.onMouseup(\r\n            event.changedTouches[0].clientX,\r\n            event.changedTouches[0].clientY\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.unsubscribeEventListeners();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onMousedown(\r\n    event: MouseEvent | TouchEvent,\r\n    clientX: number,\r\n    clientY: number\r\n  ): void {\r\n    event.preventDefault();\r\n    if (!this.eventListeners.touchmove) {\r\n      this.eventListeners.touchmove = this.renderer.listen(\r\n        this.element.nativeElement,\r\n        'touchmove',\r\n        (touchMoveEvent: TouchEvent) => {\r\n          this.onMousemove(\r\n            touchMoveEvent,\r\n            touchMoveEvent.targetTouches[0].clientX,\r\n            touchMoveEvent.targetTouches[0].clientY\r\n          );\r\n        }\r\n      );\r\n    }\r\n    if (!this.eventListeners.mousemove) {\r\n      this.eventListeners.mousemove = this.renderer.listen(\r\n        this.element.nativeElement,\r\n        'mousemove',\r\n        (mouseMoveEvent: MouseEvent) => {\r\n          this.onMousemove(\r\n            mouseMoveEvent,\r\n            mouseMoveEvent.clientX,\r\n            mouseMoveEvent.clientY\r\n          );\r\n        }\r\n      );\r\n    }\r\n    this.resizable.mousedown.next({\r\n      clientX,\r\n      clientY,\r\n      edges: this.resizeEdges,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onMouseup(clientX: number, clientY: number): void {\r\n    this.unsubscribeEventListeners();\r\n    this.resizable.mouseup.next({\r\n      clientX,\r\n      clientY,\r\n      edges: this.resizeEdges,\r\n    });\r\n  }\r\n\r\n  // directive might be passed from DI or as an input\r\n  private get resizable(): ResizableDirective {\r\n    return this.resizableDirective || this.resizableContainer;\r\n  }\r\n\r\n  private onMousemove(\r\n    event: MouseEvent | TouchEvent,\r\n    clientX: number,\r\n    clientY: number\r\n  ): void {\r\n    this.resizable.mousemove.next({\r\n      clientX,\r\n      clientY,\r\n      edges: this.resizeEdges,\r\n      event,\r\n    });\r\n  }\r\n\r\n  private unsubscribeEventListeners(): void {\r\n    Object.keys(this.eventListeners).forEach((type) => {\r\n      (this as any).eventListeners[type]();\r\n      delete this.eventListeners[type];\r\n    });\r\n  }\r\n\r\n  private listenOnTheHost<T extends Event>(eventName: string) {\r\n    return fromEvent<T>(this.element.nativeElement, eventName).pipe(\r\n      takeUntil(this.destroy$)\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ResizableDirective } from './resizable.directive';\r\nimport { ResizeHandleDirective } from './resize-handle.directive';\r\n\r\n@NgModule({\r\n  declarations: [ResizableDirective, ResizeHandleDirective],\r\n  exports: [ResizableDirective, ResizeHandleDirective],\r\n})\r\nexport class ResizableModule {}\r\n","/*\r\n * Public API Surface of angular-resizable-element\r\n */\r\n\r\nexport * from './lib/resizable.module';\r\nexport { BoundingRectangle } from './lib/interfaces/bounding-rectangle.interface';\r\nexport { Edges } from './lib/interfaces/edges.interface';\r\nexport { ResizeEvent } from './lib/interfaces/resize-event.interface';\r\nexport { ResizableDirective } from './lib/resizable.directive';\r\nexport { ResizeHandleDirective } from './lib/resize-handle.directive';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}